[{"D:\\projekty\\createRecipe\\src\\index.js":"1","D:\\projekty\\createRecipe\\src\\App.js":"2","D:\\projekty\\createRecipe\\src\\reportWebVitals.js":"3","D:\\projekty\\createRecipe\\src\\FormSteps\\FormSteps.js":"4","D:\\projekty\\createRecipe\\src\\FormSteps\\definitions.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":244,"mtime":1612378109891,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2681,"mtime":1612379981197,"results":"10","hashOfConfig":"7"},{"size":0,"mtime":1612347611552,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"sajjpw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\projekty\\createRecipe\\src\\index.js",[],["25","26"],"D:\\projekty\\createRecipe\\src\\App.js",[],"D:\\projekty\\createRecipe\\src\\reportWebVitals.js",[],"D:\\projekty\\createRecipe\\src\\FormSteps\\FormSteps.js",["27","28","29","30","31","32"],"import React, { useRef, useState } from 'react';\r\nimport './FormSteps.css';\r\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\r\nimport _ from 'lodash';\r\nimport { Button, Container, Row, Col, FormControl, FormGroup, Form } from 'react-bootstrap';\r\nimport { recipeDefinition } from './definitions';\r\n\r\nconst FormSteps = () => {\r\n    const monitor = useRef(null);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [formStatus, setFormStatus] = useState({\r\n        start: true,\r\n        finished: false\r\n    });\r\n    const [recipeControls, setRecipeControls] = useState(Object.assign({}, recipeDefinition));\r\n\r\n    const formView = ['a', 'b', 'c', 'd'];\r\n\r\n    const switchPages = (param) => {\r\n        const controlsLengt = Object.keys(formView).length - 1;\r\n        let finished = false;\r\n        let start = true;\r\n        ((currentPage + param) === controlsLengt) ? finished = true : finished = false;\r\n        (currentPage + param === 0) ? start = true : start = false;\r\n\r\n        if ((param < 0 && currentPage !== 0) || (param > 0 && currentPage !== controlsLengt)) {\r\n            setCurrentPage(currentPage + param);\r\n        }\r\n\r\n        const updatedFormStatus = { ...formStatus, start: start, finished: finished }\r\n        setFormStatus(updatedFormStatus);\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log('done!');\r\n    };\r\n\r\n    let currFormView = formView[currentPage];\r\n\r\n    return (\r\n        <Container>\r\n            <SwitchTransition mode=\"out-in\">\r\n                <CSSTransition\r\n                    nodeRef={monitor}\r\n                    key={currentPage}\r\n                    timeout={500}\r\n                    classNames=\"fade\">\r\n                    <div ref={monitor}>\r\n                        <Row>\r\n                            <Col>Form</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>{currFormView}</Col>\r\n                        </Row>\r\n                    </div>\r\n                </CSSTransition>\r\n            </SwitchTransition>\r\n            <Row>\r\n                <Col>\r\n                    <Button variant=\"light\" onClick={() => { switchPages(-1) }} disabled={formStatus.start}>prev</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button variant=\"light\" onClick={() => { switchPages(1) }} disabled={formStatus.finished}>next</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>{formStatus.finished ? <Button onClick={handleSubmit}>zakoncz</Button> : ''}</Col>\r\n            </Row>\r\n\r\n\r\n        </Container>\r\n    )\r\n}\r\nexport default FormSteps;","D:\\projekty\\createRecipe\\src\\FormSteps\\definitions.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":9},{"ruleId":"39","severity":1,"message":"43","line":5,"column":39,"nodeType":"41","messageId":"42","endLine":5,"endColumn":50},{"ruleId":"39","severity":1,"message":"44","line":5,"column":52,"nodeType":"41","messageId":"42","endLine":5,"endColumn":61},{"ruleId":"39","severity":1,"message":"45","line":5,"column":63,"nodeType":"41","messageId":"42","endLine":5,"endColumn":67},{"ruleId":"39","severity":1,"message":"46","line":15,"column":12,"nodeType":"41","messageId":"42","endLine":15,"endColumn":26},{"ruleId":"39","severity":1,"message":"47","line":15,"column":28,"nodeType":"41","messageId":"42","endLine":15,"endColumn":45},{"ruleId":"35","replacedBy":"48"},{"ruleId":"37","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'Form' is defined but never used.","'recipeControls' is assigned a value but never used.","'setRecipeControls' is assigned a value but never used.",["50"],["51"],"no-global-assign","no-unsafe-negation"]